template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  - name: mvn_repo
    type: GitRepo
    configuration:
      path: {{ .Values.repoPath }}
      gitProvider: {{ .Values.gitProvider }}

  - name: mvn_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.artifactory }}
      
  - name: cron_trigger_mvn
    type: CronTrigger
    configuration:
      interval: '0 3 * * *'       

pipelines:
  - name: Thomas_Veracode_Demo
    steps:
      - name: bash_connands
        type: Bash
        execution:
          onStart:
            - echo "onStart can be used to do some setup or initialization of your dependencies to prepare for the execution."
            - echo "Downloading the latest version of the Veracode Java API Wrapper"
            #- git clone https://github.com/bnreplah/verademo.git
            - WRAPPER_VERSION=$( `curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/maven-metadata.xml | grep latest |  cut -d '>' -f 2 | cut -d '<' -f 1` )
            - echo '[INFO] ------------------------------------------------------------------------'
            - echo '[INFO] DOWNLOADING VERACODE JAVA WRAPPER'
            - | 
              if [ `wget https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$WRAPPER_VERSION/vosp-api-wrappers-java-$WRAPPER_VERSION.jar -O VeracodeJavaAPI.jar` ]; then
                    chmod 755 VeracodeJavaAPI.jar
                    echo '[INFO] SUCCESSFULLY DOWNLOADED WRAPPER'
              else
                    echo '[ERROR] DOWNLOAD FAILED'
                    exit 1
              fi
            - echo '[INFO] ------------------------------------------------------------------------'
            - echo '[INFO] VERACODE UPLOAD AND SCAN'
          onExecute:
            - >-
              echo "onExecute is the main section where you would issue your build/test commands"
          onSuccess:
            - >-
              echo "onSuccess executes if the onStart or onExecute sections completed without errors"
              #cd ./verademo/app
          onFailure:
            - >-
              echo "onFailure executes if either onStart or onExecute end in failure or error."
          onComplete:
            - echo "onComplete executes after onSuccess or onFailure"

      - name: publish_from_bash
        type: PublishBuildInfo
        configuration:
          forceXrayScan: false
          inputSteps:
            - name: bash_connands
          outputResources:
            - name: buildInfoResource
      - name: mvn_build_step
        type: MvnBuild
        configuration:
          deployerSnapshotRepo: {{ .Values.deployerRepo }}
          deployerReleaseRepo: {{ .Values.deployerRepo }}
          inputResources:
            - name: mvn_repo
            - name: cron_trigger_mvn
            - name: buildInfoResource
          integrations:
            - name: {{ .Values.artifactory }}
          sourceLocation: "app/"
